"use strict";(self.webpackChunkgefyra=self.webpackChunkgefyra||[]).push([[1275],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),h=a,k=d["".concat(s,".").concat(h)]||d[h]||p[h]||l;return n?r.createElement(k,o(o({ref:t},c),{},{components:n})):r.createElement(k,o({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7446:(e,t,n)=>{n.d(t,{ZP:()=>i});var r=n(7462),a=(n(7294),n(3905));const l={toc:[{value:"Please provide us with your feedback",id:"please-provide-us-with-your-feedback",level:2}]},o="wrapper";function i(e){let{components:t,...n}=e;return(0,a.kt)(o,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"please-provide-us-with-your-feedback"},"Please provide us with your feedback"),(0,a.kt)("p",null,"Did everything work as expected? How was the experience of using Gefyra?\nWe'd appreciate if you could take 2 minutes of your time to fill out our ",(0,a.kt)("a",{parentName:"p",href:"https://forms.gle/AWT9NparpTVk8E978"},"feedback form"),"."))}i.isMDXComponent=!0},968:(e,t,n)=>{n.d(t,{ZP:()=>i});var r=n(7462),a=(n(7294),n(3905));const l={toc:[{value:"2. Run a local Docker container with Gefyra in order to connect it with the cluster.",id:"2-run-a-local-docker-container-with-gefyra-in-order-to-connect-it-with-the-cluster",level:4},{value:"2.1 Build a simple Docker image with a local tag. Save the following two files in a directory on your disk.",id:"21-build-a-simple-docker-image-with-a-local-tag-save-the-following-two-files-in-a-directory-on-your-disk",level:5},{value:"2.2 Build it by running <code>docker build -f Dockerfile . -t pyserver</code> in your directory.",id:"22-build-it-by-running-docker-build--f-dockerfile---t-pyserver-in-your-directory",level:5},{value:"2.3 Execute Gefyra&#39;s run command:",id:"23-execute-gefyras-run-command",level:5},{value:"3. <em>Exec</em> into the running container and look around. You will find the container to run within your Kubernetes cluster.",id:"3-exec-into-the-running-container-and-look-around-you-will-find-the-container-to-run-within-your-kubernetes-cluster",level:4},{value:"4. Create a bridge to redirect the traffic from the cluster application to the one running locally:",id:"4-create-a-bridge-to-redirect-the-traffic-from-the-cluster-application-to-the-one-running-locally",level:4},{value:"5. List all running <em>bridges</em>:",id:"5-list-all-running-bridges",level:4},{value:"6. <em>Unbridge</em> the local container and reset the cluster to its original state:",id:"6-unbridge-the-local-container-and-reset-the-cluster-to-its-original-state",level:4},{value:"Cleaning up",id:"cleaning-up",level:2}]},o="wrapper";function i(e){let{components:t,...n}=e;return(0,a.kt)(o,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"2-run-a-local-docker-container-with-gefyra-in-order-to-connect-it-with-the-cluster"},"2. Run a local Docker container with Gefyra in order to connect it with the cluster."),(0,a.kt)("h5",{id:"21-build-a-simple-docker-image-with-a-local-tag-save-the-following-two-files-in-a-directory-on-your-disk"},"2.1 Build a simple Docker image with a local tag. Save the following two files in a directory on your disk."),(0,a.kt)("p",null,"   File ",(0,a.kt)("inlineCode",{parentName:"p"},"./Dockerfile")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Dockerfile"},"FROM ubuntu\n# run a server on port 8000\nRUN apt update && apt install -y iproute2 iputils-ping python3 traceroute wget curl\nCOPY local.py local.py\nCMD python3 local.py\n")),(0,a.kt)("p",null,"   File ",(0,a.kt)("inlineCode",{parentName:"p"},"./local.py")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import http.server\nimport signal\nimport socket\nimport socketserver\nimport sys\nfrom datetime import datetime\n\nif sys.argv[1:]:\n   port = int(sys.argv[1])\nelse:\n   port = 8000\n\nclass MyHttpRequestHandler(http.server.SimpleHTTPRequestHandler):\n   def do_GET(self):\n      self.send_response(200)\n      self.send_header("Content-type", "text/html")\n      self.end_headers()\n      hostname = socket.gethostname()\n      now = datetime.utcnow()\n      self.wfile.write(\n            bytes(\n               f"<html><body><h1>Hello from Gefyra. It is {now} on"\n               f" {hostname}.</h1></body></html>".encode("utf-8")\n            )\n      )\n\nmy_handler = MyHttpRequestHandler\nserver = socketserver.ThreadingTCPServer(("", port), my_handler)\n\ndef signal_handler(signal, frame):\n   try:\n      if server:\n            server.server_close()\n   finally:\n      sys.exit(0)\n\nsignal.signal(signal.SIGINT, signal_handler)\ntry:\n   while True:\n      sys.stdout.flush()\n      server.serve_forever()\nexcept KeyboardInterrupt:\n   pass\n\nserver.server_close()\n')),(0,a.kt)("h5",{id:"22-build-it-by-running-docker-build--f-dockerfile---t-pyserver-in-your-directory"},"2.2 Build it by running ",(0,a.kt)("inlineCode",{parentName:"h5"},"docker build -f Dockerfile . -t pyserver")," in your directory."),(0,a.kt)("h5",{id:"23-execute-gefyras-run-command"},"2.3 Execute Gefyra's run command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra run -d -i pyserver -N mypyserver -n default\n")),(0,a.kt)("p",null,"   ",(0,a.kt)("strong",{parentName:"p"},"Important"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"gefyra run")," is just a wrapper for ",(0,a.kt)("inlineCode",{parentName:"p"},"docker run")," (with additional flags), yet it also applies Gefyra's networking\nconfiguration to connect the container with Kubernetes. Check out ",(0,a.kt)("a",{parentName:"p",href:"/docs/cli#run"},"the docs for ",(0,a.kt)("inlineCode",{parentName:"a"},"gefyra run"))),(0,a.kt)("h4",{id:"3-exec-into-the-running-container-and-look-around-you-will-find-the-container-to-run-within-your-kubernetes-cluster"},"3. ",(0,a.kt)("em",{parentName:"h4"},"Exec")," into the running container and look around. You will find the container to run within your Kubernetes cluster."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"docker exec -it mypyserver bash\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"wget -O- hello-nginx\n")),(0,a.kt)("p",null,"will print out the website of the cluster service ",(0,a.kt)("em",{parentName:"p"},"hello-nginx")," from within the cluster. \ud83d\ude80"),(0,a.kt)("h4",{id:"4-create-a-bridge-to-redirect-the-traffic-from-the-cluster-application-to-the-one-running-locally"},"4. Create a bridge to redirect the traffic from the cluster application to the one running locally:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra bridge -N mypyserver -n default --ports 80:8000 --target deploy/hello-nginxdemo/hello-nginx\n")),(0,a.kt)("p",null,"Check out the locally running server serving the cluster by refreshing the address from the service in Kubernetes.",(0,a.kt)("br",{parentName:"p"}),"\n","It shows you a different message: ",(0,a.kt)("inlineCode",{parentName:"p"},"Hello from Gefyra. It is ..."),". Yes, that is really coming from your local container! \ud83d\ude0e"),(0,a.kt)("h4",{id:"5-list-all-running-bridges"},"5. List all running ",(0,a.kt)("em",{parentName:"h4"},"bridges"),":"),(0,a.kt)("p",null,"You can list all currently active bridges with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra list --bridges\n")),(0,a.kt)("p",null,"You will find all local containers that are currently linked into the cluster serving requests. "),(0,a.kt)("h4",{id:"6-unbridge-the-local-container-and-reset-the-cluster-to-its-original-state"},"6. ",(0,a.kt)("em",{parentName:"h4"},"Unbridge")," the local container and reset the cluster to its original state:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra unbridge --all\n")),(0,a.kt)("p",null,"Check out the original response from from the service. The cluster is now reset to its inital state again."),(0,a.kt)("h2",{id:"cleaning-up"},"Cleaning up"),(0,a.kt)("p",null,"Remove Gefyra's components from the cluster and your local Docker host with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra down\n")))}i.isMDXComponent=!0},4109:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var r=n(7462),a=(n(7294),n(3905)),l=n(968),o=n(7446);const i={title:"k3d"},s="Getting started with Gefyra and k3d",u={unversionedId:"local-environments/k3d",id:"version-2.0.0/local-environments/k3d",title:"k3d",description:"This guide will show you how to use Gefyra for the local development of a Kubernetes application running in k3d.",source:"@site/versioned_docs/version-2.0.0/local-environments/k3d.md",sourceDirName:"local-environments",slug:"/local-environments/k3d",permalink:"/docs/local-environments/k3d",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-2.0.0/local-environments/k3d.md",tags:[],version:"2.0.0",frontMatter:{title:"k3d"},sidebar:"docsSidebar",previous:{title:"Docker Desktop Kubernetes (OSX)",permalink:"/docs/local-environments/docker_desktop_osx"},next:{title:"kind",permalink:"/docs/local-environments/kind"}},c={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Creating a local Kubernetes cluster",id:"creating-a-local-kubernetes-cluster",level:2},{value:"1. Create a local Kubernetes cluster with k3d by running:",id:"1-create-a-local-kubernetes-cluster-with-k3d-by-running",level:3},{value:"2. Apply some workload, for example from the testing directory of this repo:",id:"2-apply-some-workload-for-example-from-the-testing-directory-of-this-repo",level:3},{value:"Running Gefyra",id:"running-gefyra",level:2},{value:"1. Set up Gefyra with your k3d cluster:",id:"1-set-up-gefyra-with-your-k3d-cluster",level:4},{value:"Deleting the locally running k3d Kubernetes cluster with",id:"deleting-the-locally-running-k3d-kubernetes-cluster-with",level:2}],p=(h="Terminal",function(e){return console.warn("Component "+h+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var h;const k={toc:d},m="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-started-with-gefyra-and-k3d"},"Getting started with Gefyra and k3d"),(0,a.kt)("p",null,"This guide will show you how to use Gefyra for the local development of a Kubernetes application running in ",(0,a.kt)("a",{parentName:"p",href:"https://k3d.io/"},"k3d"),"."),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"K3d is ",(0,a.kt)("a",{parentName:"li",href:"https://k3d.io/#installation"},"installed")," (at least in version v5.4.9)"),(0,a.kt)("li",{parentName:"ol"},"Gefyra is ",(0,a.kt)("a",{parentName:"li",href:"https://gefyra.dev/installation"},"available")," (at least in version 2.0.0)")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Hint")," there is a bug in Docker Desktop v4.17-v4.18 which causes ",(0,a.kt)("inlineCode",{parentName:"p"},"gefyra up")," to fail with k3d clusters that run on that DD version."),(0,a.kt)("h2",{id:"creating-a-local-kubernetes-cluster"},"Creating a local Kubernetes cluster"),(0,a.kt)(p,{src:"/img/minikube2.gif",alt:"Set up Minikube",mdxType:"Terminal"}),(0,a.kt)("h3",{id:"1-create-a-local-kubernetes-cluster-with-k3d-by-running"},"1. Create a local Kubernetes cluster with k3d by running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"k3d cluster create mycluster --agents 1 -p 8080:80@agent:0 -p 31820:31820/UDP@agent:0\n")),(0,a.kt)("p",null,"This creates a Kubernetes cluster that binds port 8080 and 31820 to localhost. The ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl")," context is immediately set to this cluster."),(0,a.kt)("h3",{id:"2-apply-some-workload-for-example-from-the-testing-directory-of-this-repo"},"2. Apply some workload, for example from the testing directory of this repo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl apply -f https://raw.githubusercontent.com/gefyrahq/gefyra/main/testing/workloads/hello.yaml\n")),(0,a.kt)("p",null,"Check out this workload running under: ",(0,a.kt)("a",{parentName:"p",href:"http://hello.127.0.0.1.nip.io:8080/"},"http://hello.127.0.0.1.nip.io:8080/")),(0,a.kt)("h2",{id:"running-gefyra"},"Running Gefyra"),(0,a.kt)("h4",{id:"1-set-up-gefyra-with-your-k3d-cluster"},"1. Set up Gefyra with your k3d cluster:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"gefyra up\n")),(0,a.kt)(l.ZP,{mdxType:"GettingStarted"}),(0,a.kt)("h2",{id:"deleting-the-locally-running-k3d-kubernetes-cluster-with"},"Deleting the locally running k3d Kubernetes cluster with"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"k3d cluster delete mycluster\n")),(0,a.kt)(o.ZP,{mdxType:"Feedback"}))}f.isMDXComponent=!0}}]);