"use strict";(self.webpackChunkgefyra=self.webpackChunkgefyra||[]).push([[1558],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>N});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),d=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},k="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),k=d(a),u=r,N=k["".concat(p,".").concat(u)]||k[u]||s[u]||l;return a?n.createElement(N,i(i({ref:t},m),{},{components:a})):n.createElement(N,i({ref:t},m))}));function N(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[k]="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},351:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));const l={title:"Command Line Interface (CLI)"},i="Command line tool (CLI)",o={unversionedId:"cli",id:"version-1.x/cli",title:"Command Line Interface (CLI)",description:"Syntax",source:"@site/versioned_docs/version-1.x/cli.md",sourceDirName:".",slug:"/cli",permalink:"/docs/1.x/cli",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.x/cli.md",tags:[],version:"1.x",frontMatter:{title:"Command Line Interface (CLI)"},sidebar:"docsSidebar",previous:{title:"SysEleven MetaKube Kubernetes",permalink:"/docs/1.x/getting-started/sys11"},next:{title:"Technical Details",permalink:"/docs/1.x/tech/"}},p={},d=[{value:"Syntax",id:"syntax",level:2},{value:"Actions",id:"actions",level:2},{value:"up",id:"up",level:3},{value:"run",id:"run",level:3},{value:"bridge",id:"bridge",level:3},{value:"unbridge",id:"unbridge",level:3},{value:"reflect",id:"reflect",level:3},{value:"down",id:"down",level:3},{value:"list",id:"list",level:3},{value:"check",id:"check",level:3},{value:"version",id:"version",level:3},{value:"status",id:"status",level:3},{value:"telemetry",id:"telemetry",level:3}],m={toc:d},k="wrapper";function s(e){let{components:t,...a}=e;return(0,r.kt)(k,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"command-line-tool-cli"},"Command line tool (CLI)"),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("p",null,"Use the following syntax to run ",(0,r.kt)("inlineCode",{parentName:"p"},"gefyra")," commands from your terminal:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"gefyra [-h] [-d] [action] [arguments]\n")),(0,r.kt)("p",null,"where ",(0,r.kt)("inlineCode",{parentName:"p"},"action")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"arguments")," are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"action"),": specifies the operation that you want to perform, for example ",(0,r.kt)("inlineCode",{parentName:"li"},"up")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"bridge")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"arguments"),":  specifies the required and optional arguments for a specific action, for example ",(0,r.kt)("inlineCode",{parentName:"li"},"-n")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"--namespace"))),(0,r.kt)("p",null,"Global flags are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-h, --help"),": show help message and exit"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-d, --debug"),": add debug output for each action")),(0,r.kt)("h2",{id:"actions"},"Actions"),(0,r.kt)("p",null,"The CLI allows to run the following available actions."),(0,r.kt)("h3",{id:"up"},"up"),(0,r.kt)("p",null,"Brings up a local development infrastructure. Gefyra pulls the active ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl")," connection and installs\n",(0,r.kt)("em",{parentName:"p"},"Operator")," to the connected cluster. Gefyra waits for ",(0,r.kt)("em",{parentName:"p"},"Operator")," to become ready. In the last step, Gefyra rolls out\nthe local Docker network and traffic tunnel endpoint.\n",(0,r.kt)("strong",{parentName:"p"},"Import")," In some scenarios firewalls may be blocking port ",(0,r.kt)("inlineCode",{parentName:"p"},"31280"),". Make sure it is reachable from your machine."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra up\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments:"),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Argument"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-H"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--host")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Host address for Gefyra to connect to",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Important:")," Be sure to allow your firewall for this IP and port to let traffic pass through")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--port")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Port for Gefyra to connect to",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Important:")," Default is 31280.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-M"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--minikube")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Let Gefyra automatically find out the connection parameters for a local Minikube cluster",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Important:")," This cannot be used together with the ",(0,r.kt)("inlineCode",{parentName:"td"},"--host")," option")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-o"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--operator")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The full image path (including tag) for the Operator image (e.g. ",(0,r.kt)("em",{parentName:"td"},"quay.io/gefyra/operator:latest"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-s"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--stowaway")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The full image path (including tag) for the Stowaway image (e.g. ",(0,r.kt)("em",{parentName:"td"},"quay.io/gefyra/stowaway:latest"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-c"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--carrier")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The full image path (including tag) for the Carrier image (e.g. ",(0,r.kt)("em",{parentName:"td"},"quay.io/gefyra/carrier:latest"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-a"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--cargo")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The full image path (including tag) for the Cargo image (e.g. ",(0,r.kt)("em",{parentName:"td"},"quay.io/gefyra/cargo:latest"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-r"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--registry")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The base url for registry to pull images from (e.g. ",(0,r.kt)("em",{parentName:"td"},"quay.io/gefyra/"),"), the full image paths will be constructed using the name and the tag of the release")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"--kubeconfig")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The path to kubeconfig file to the Kubernetes cluster (default is global ",(0,r.kt)("inlineCode",{parentName:"td"},"kubeconfig"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"--context")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The context name from kubeconfig (default is active global context)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"--wireguard-mtu")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The MTU value for the local Wireguard endpoint (default: 1340)")))),(0,r.kt)("h3",{id:"run"},"run"),(0,r.kt)("p",null,"Run a new app container image in Gefyra's development infrastructure. Any Docker image is supported. It is required to\nassign a name to the container instance for further reference."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra run -i pyserver -N mypyserver -n default\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments:"),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Argument"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-i"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--image")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Docker image to run in Gefyra (required)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-N"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the container running in Gefyra")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-n"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Kubernetes namespace for this container to run in (default: ",(0,r.kt)("em",{parentName:"td"},"default"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-c"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--command")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The command for this container to run in Gefyra")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"--expose")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Add port mapping in form of ",(0,r.kt)("inlineCode",{parentName:"td"},"<ip>:<host_port>:<container_port>")," ",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Important:")," This works just as ",(0,r.kt)("inlineCode",{parentName:"td"},"docker run --expose")," (see: ",(0,r.kt)("a",{parentName:"td",href:"https://docs.docker.com/engine/reference/commandline/run/#publish-or-expose-port--p---expose"},"Docker reference"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"--rm")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Automatically remove the container when it exits or when it is killed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"--env")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Set or override environment variables in the form ",(0,r.kt)("em",{parentName:"td"},"ENV=value"),", allowed multiple times")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"--env-from")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Copy the environment from the container in the notation ",(0,r.kt)("inlineCode",{parentName:"td"},"<workload_type>/<workload_name>/<container>"),". ",(0,r.kt)("inlineCode",{parentName:"td"},"container")," is optional. ",(0,r.kt)("br",null)," Example: ",(0,r.kt)("inlineCode",{parentName:"td"},"deploy/some-deployment")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"pod/pod-name-1dd1/my-container"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-v"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--volume")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Bind mount a volume into the container in notation ",(0,r.kt)("em",{parentName:"td"},"src:dest"),", allowed multiple times")))),(0,r.kt)("h3",{id:"bridge"},"bridge"),(0,r.kt)("p",null,"Intercept the traffic to a container that's running in the Kubernetes cluster and send it to the development container.\nYou can watch active bridges with ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl -n gefyra get ireq")," (",(0,r.kt)("em",{parentName:"p"},"InterceptRequests"),"). The container is the cluster will\nbe replaced by Gefyra's proxy component ",(0,r.kt)("em",{parentName:"p"},"Carrier"),". Carrier redirects all requests from the intercepted container (running\nin a Pod) to the local development container. During the bridge operation Carrier can fake-serve ",(0,r.kt)("inlineCode",{parentName:"p"},"httpGet")," probes. There\nis one bridge for each Pod/container combination if a Deployment or Statefulset is selected with more than one Pod."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra bridge -N mypyserver --target deploy/hello-nginxdemo/hello-nginx --port 80:8000 -n default\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments:"),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Argument"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-N"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the container running in Gefyra (started with ",(0,r.kt)("inlineCode",{parentName:"td"},"run"),") receiving the traffic (required)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-p"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--port")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The port mapping from source to target in the form ",(0,r.kt)("inlineCode",{parentName:"td"},"<source>:<target>"),", allowed multiple times (required)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-n"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Kubernetes namespace for this container to run in (default: ",(0,r.kt)("em",{parentName:"td"},"default"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-P"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--no-probe-handling")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Make ",(0,r.kt)("em",{parentName:"td"},"Carrier")," to not handle probes during the bridge operation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"--target")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Target to bridge in the notation of ",(0,r.kt)("inlineCode",{parentName:"td"},"<type>/<workload_name>/<container>")," ",(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"Important:")," ",(0,r.kt)("inlineCode",{parentName:"td"},"<type>"),"  can be one of {pod, po, pods, deploy, deployment, deployments, statefulset, sts, statefulsets}, ",(0,r.kt)("inlineCode",{parentName:"td"},"<workload_name>")," is the name of the resource to bridge and ",(0,r.kt)("inlineCode",{parentName:"td"},"<container>")," is the name of the container within the resource.")))),(0,r.kt)("h3",{id:"unbridge"},"unbridge"),(0,r.kt)("p",null,"Remove active traffic intercepts and reset the cluster to its original state."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra unbridge -N mypybridge\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments:"),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Argument"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-N"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--name")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the bridge to be removed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-A"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--all")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Remove all bridges at once")))),(0,r.kt)("h3",{id:"reflect"},"reflect"),(0,r.kt)("p",null,"Combines ",(0,r.kt)("inlineCode",{parentName:"p"},"run")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"bridge")," commands. It starts a new container in Gefyra and bridges the traffic to it.\n",(0,r.kt)("inlineCode",{parentName:"p"},"reflect")," takes a workload as argument and mirrors the given workload on the local machine.\nIt is possible to overwrite several aspects of the workload, e.g. the image, the command or the environment variables."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra reflect\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments:"),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Argument"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-w"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--workload")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The workload to be mirrored on the local machine.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-e"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--expose")),(0,r.kt)("td",{parentName:"tr",align:"left"},"If set use ports from Kubernetes resource to expose the container to the host.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-i"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--image")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Overwrite the container's image. Useful if there is a development version of your image.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-v"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--volume")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Attach a volume to the container. Useful to mount code from host system to the container.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-p"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--port")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Overwrite ports which should be exposed from the container to the host.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-b"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--bridge")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Bridge workload immediately when container has started.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-c"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--command")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Overwrite command of container.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-n"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Namespace of the workload. Default to ",(0,r.kt)("inlineCode",{parentName:"td"},"default"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"--env")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Add environment variable to container e.g. ",(0,r.kt)("inlineCode",{parentName:"td"},"--env KUBE=2"))))),(0,r.kt)("h3",{id:"down"},"down"),(0,r.kt)("p",null,"Remove Gefyra's development infrastructure, including active bridges and all cluster components. The local Docker\nnetwork will be removed as well."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra down\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments:"),(0,r.kt)("br",{parentName:"p"}),"\n","No arguments available."),(0,r.kt)("h3",{id:"list"},"list"),(0,r.kt)("p",null,"List running containers and active bridges. You can select either ",(0,r.kt)("inlineCode",{parentName:"p"},"--bridges")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"--containers")," to display."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra list --bridges\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments:"),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Argument"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"--bridges")),(0,r.kt)("td",{parentName:"tr",align:"left"},"List only bridges")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"--containers")),(0,r.kt)("td",{parentName:"tr",align:"left"},"List only local development containers")))),(0,r.kt)("h3",{id:"check"},"check"),(0,r.kt)("p",null,"Check local system dependencies, such as Docker and Kubernetes."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra check\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments:"),(0,r.kt)("br",{parentName:"p"}),"\n","No arguments available."),(0,r.kt)("h3",{id:"version"},"version"),(0,r.kt)("p",null,"Display the current version and exit."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra version\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments:"),(0,r.kt)("br",{parentName:"p"}),"\n","No arguments available."),(0,r.kt)("h3",{id:"status"},"status"),(0,r.kt)("p",null,"Display the status of Gefyra on the local machine and the cluster."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra status\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments:"),(0,r.kt)("br",{parentName:"p"}),"\n","No arguments available."),(0,r.kt)("h3",{id:"telemetry"},"telemetry"),(0,r.kt)("p",null,"Gefyra anonymously tracks its usage by collecting telemetry data. Telemetry is enabled by default."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gefyra telemetry --on\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments:"),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Argument"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"--off")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Turn off telemetry")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"--on")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Turn on telemetry")))))}s.isMDXComponent=!0}}]);